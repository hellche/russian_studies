---
title: "II. IMPACT OF PIBLICATIONS"
---

```{r setup}
#| include=FALSE
knitr::opts_chunk$set(echo = FALSE,  warning = FALSE, message =  FALSE) 
```

```{r packages}
library(tidyverse)
library(haven)
library(readr)
library(table1)
library(sjlabelled)
library(ggpubr)
library(ggridges)
library(ggsignif)
library(patchwork)
library(expss)
library(FactoMineR)
library(factoextra)
library(RColorBrewer)
library(stringr)
library(stringr)
library(stringi)
library(tidyverse)
library(haven)
library(readr)
library(table1)
library(sjlabelled)
library(ggpubr)
library(ggridges)
library(ggsignif)
library(patchwork)
library(tibble)
library(ggpmisc)
library(readxl)
#library(glmmTMB)
#library(sjPlot)
#library(sjmisc)
library(sjlabelled)
#library(jtools)
#library(ggstance)
#library(huxtable)
#library(MASS)
#library(pscl) 
library(data.table)
library(ggthemes)
library(ggpubr)
library(knitr)
options(kableExtra.latex.load_packages = FALSE)
library(kableExtra)
library(DT)
## скользящее среднее
library(tidyquant)
library(plotly)
```

```{r functions}
pvalue <- function(x, ...) {
    # Construct vectors of data y, and groups (strata) g
    y <- unlist(x)
    g <- factor(rep(1:length(x), times=sapply(x, length)))
    if (is.numeric(y)) {
        # For numeric variables, perform a standard 2-sample t-test
        p <- t.test(y ~ g)$p.value
    } else {
        # For categorical variables, perform a chi-squared test of independence
        p <- chisq.test(table(y, g),correct = TRUE, simulate.p.value = TRUE, B = 10000)$p.value
    }
    # Format the p-value, using an HTML entity for the less-than sign.
    # The initial empty string places the output on the line below the variable label.
    c("", sub("<", "&lt;", format.pval(p, digits=3, eps=0.001)))
}


#simulate.p.value = FALSE, B = 2000

all_test <- function(x, ...) {
    # Construct vectors of data y, and groups (strata) g
    y <- unlist(x)
    g <- factor(rep(1:length(x), times=sapply(x, length)))
    if (is.numeric(y)) {
        # For numeric variables, perform a standard 2-sample t-test
        p <- t.test(y ~ g)$p.value
        t <- t.test(y ~ g)$statistic
        par <- t.test(y ~ g)$parameter
    } else {
        # For categorical variables, perform a chi-squared test of independence
        p <- chisq.test(table(y, g))$p.value
        t <- chisq.test(table(y, g))$statistic
        par <- chisq.test(table(y, g))$parameter
    }
    # Format the p-value, using an HTML entity for the less-than sign.
    # The initial empty string places the output on the line below the variable label.
    c("", paste0(sub("<", "&lt;", format.pval(p, digits=3, eps=0.001)), "; val test stat = " , round(t, digits=3), "; df =" , round(par, digits=3)))
}
```

```{r data}
data <- read_csv("data/data_clean.csv")
```

## 1. Средний импакт

**Важно:** Чей регион? Институции или журнала? От этого будет зависеть
надо или нет убирать строки-дубли вызавнные тем, что строка это автор.

```{r}
#| fig.dim = c(9, 3)

df <- data %>% distinct(UT, .keep_all = TRUE) %>% #select(year,region,field) %>% 
filter(region != "Unknown") %>% 
  group_by(year,region) %>% 
  summarise(mean_TC = round(mean(TC), 2),
            mean_mncs = round(mean(mncs), 2)) 

p1 <- df %>% ggplot(aes(x=year, y=mean_TC, fill=region, group = region)) + 
  geom_col() +
  facet_wrap(~region, nrow = 1) +
  labs(title = "Среднее число цитирований по ядру (TC)") +
  theme_bw() +
  scale_fill_brewer(palette = "Paired") +
  guides(color=guide_legend(override.aes = list(size=5))) + 
  theme(panel.grid = element_blank(),
        panel.grid.major.y = element_line(size=0.1, color = "grey70", linetype = "solid")) +
  theme(strip.background = element_rect(fill = NA),
        strip.text = element_text(colour = 'black',size = 7)) +
  theme(axis.title = element_blank(),
        legend.position = "none",
        legend.title= element_blank()) +
  theme(axis.text.x = element_text(size = 7, angle = 0, vjust=0.5),
        axis.text.y = element_text(size = 8)) 


df <- data %>% distinct(UT, .keep_all = TRUE) %>% #select(year,region,field) %>% 
filter(region != "Unknown") %>% 
  group_by(year,region) %>% 
  summarise(mean_TC = round(mean(TC), 2),
            mean_mncs = round(mean(mncs), 2)) 

p2 <- df %>%  
  ggplot(aes(x=year, y=mean_mncs, fill=region, group = region)) + 
  geom_col() +
  facet_wrap(~region, nrow = 1) +
  labs(title = "Среднее значение MNCS") +
  theme_bw() +
  scale_fill_brewer(palette = "Paired") +
  guides(color=guide_legend(override.aes = list(size=5))) + 
  theme(panel.grid = element_blank(),
        panel.grid.major.y = element_line(size=0.1, color = "grey70", linetype = "solid")) +
  theme(strip.background = element_rect(fill = NA),
        strip.text = element_text(colour = 'black',size = 7)) +
  theme(axis.title = element_blank(),
        legend.position = "none",
        legend.title= element_blank()) +
  theme(axis.text.x = element_text(size = 7, angle = 0, vjust=0.5),
        axis.text.y = element_text(size = 8)) 

df <- data %>% distinct(UT, .keep_all = TRUE) %>% #select(year,region,field) %>% 
filter(region != "Unknown") %>% 
  mutate(zero_cit = case_when(TC < 1 ~ "zero cit",
                              TRUE ~ "have cit"))  
p3 <- df %>%   
  ggplot(aes(x=year, fill=zero_cit)) + 
  geom_bar(position = "fill") +
    scale_y_continuous(labels=scales::percent) +
    geom_hline(yintercept = 0.5, linetype = "dashed", size=0.3) +
  facet_wrap(~region, nrow = 1) +
  labs(title = "Число статей без цитирований (TC = 0)") +
  theme_bw() +
  scale_fill_brewer(palette = "Paired") +
  guides(color=guide_legend(override.aes = list(size=5))) + 
  theme(panel.grid = element_blank(),
        panel.grid.major.y = element_line(size=0.1, color = "grey70", linetype = "solid")) +
  theme(strip.background = element_rect(fill = NA),
        strip.text = element_text(colour = 'black',size = 7)) +
  theme(axis.title = element_blank(),
        legend.position = "bottom",
        legend.title= element_blank()) +
  theme(axis.text.x = element_text(size = 7, angle = 0, vjust=0.5),
        axis.text.y = element_text(size = 8)) 

ggplotly(p1)
ggplotly(p2)
ggplotly(p3)

```

## 2. Страны и динамика их цитируемости 

Таблица с основными странами, разделение на 3 периода и следующие показатели в каждом периоде показать: кол-во публикаций, MNSC, средняя цитируемость на статью.  

**Важно:** статьи в соавторстве приписаны как +1 к стране каждого
соавтора.

`n - число статей`
`I - период 1990-2000 / II - период 2001-2010 / III - период 2011-2020`

```{r}

# все три периода в большой таблице
data %>% #distinct(UT, .keep_all = TRUE) %>% 
  mutate(year_group2 = case_when(year_group == "1990-2000" ~ "I",
                                year_group == '2001-2010' ~ "II",
                                TRUE ~ "III")) %>% 
  mutate(country = case_when(is.na(country) ~ "Unknown",
                             TRUE ~ country)) %>% 
  group_by(country) %>% mutate(country = case_when(n() < 50 ~ "OTHER (< 50 pubs 1990-2020)",
                                                   TRUE ~ country)) %>% ungroup() %>% 

  group_by(country, year_group2) %>% summarise(n=length(organisation_full),
                                              tc = mean(TC),
                                              mncs = mean(mncs)) %>% 
 
  pivot_wider(values_from = c(n,tc,mncs), names_from = "year_group2") %>% 
  ungroup() %>% arrange(desc(`n_III`)) %>%
  
  datatable(rownames = FALSE, options = list(pageLength = 10)) %>% 
  formatRound(columns=c(5:10), digits=1)
```

## 3. Регионы: доли статей в топах

Средние значения показателей вхождения в топ по годам для регионов на отдельных графиках -- доли статей в топе 1, 10 и 25. Три графика -- линии это для регионов.  

**Важно:** чей регион? журнала или институции? 
проверить порядок фильтрации region везде где нет грауппы region == Unknown


::: panel-tabset 

#### Скользящее среденее + реальные значения

```{r}

#| fig.dim = c(6, 3)

df <- data %>% #distinct(UT, .keep_all = TRUE) %>% 
  select(year, region, top_1, top_10, top_25) %>% 
filter(region != "Unknown") %>% 
  filter(region != "Other") %>% 
  group_by(year, region) %>% mutate(count = length(top_1)) %>% ungroup() %>% 
  group_by(year, region, count) %>% summarise(top_1 = sum(top_1),
                                               top_10 = sum(top_10),
                                               top_25 = sum(top_25)) %>% ungroup() %>% 

  mutate(top_1_perc = 100 * top_1 / count,
         top_10_perc = 100 * top_10 / count,
         top_25_perc = 100 * top_25 / count) %>% 
  pivot_longer(-c(year,region, count, top_1, top_10, top_25), names_to = "top_x", values_to = "value") 

p1 <- df %>% ggplot(aes(x=year, value, color=top_x, group = top_x)) + 
  geom_line(alpha = 0.5, size = 0.5) +
  geom_point(alpha = 0.5, size = 0.5) +
  geom_ma(ma_fun = SMA, n = 3, linetype = "solid", size = 1.1) +
  # scale_x_continuous(
  #       labels = as.character(seq(min(df$year), max(df$year), by = 1)),
  #       breaks = seq(min(df$year), max(df$year), by = 1),
  #       expand=c(0,0)
  #   ) +
  scale_y_continuous(labels = function(x) paste0(x, "%")) +
  facet_wrap(~region, nrow = 1) +
  labs(title = "Доля статей, входящих топ",
      subtitle = "светалая линия - реальные значения; темная линия - скользящее среднее (шаг = 3 года)") +
  theme_bw() +
  scale_color_brewer(palette = "Dark2", direction = -1) +
  guides(color=guide_legend(override.aes = list(size=5))) + 
  theme(panel.grid = element_blank(),
        panel.grid.major.y = element_line(size=0.1, color = "grey70", linetype = "solid")) +
  theme(strip.background = element_rect(fill = NA),
        strip.text = element_text(colour = 'black',size = 8)) +
  theme(axis.title = element_blank(),
        legend.position = "bottom",
        legend.title= element_blank()) +
  theme(axis.text.x = element_text(size = 7, angle = 45, vjust=0.5),
        axis.text.y = element_text(size = 8)) 

p1

```

#### Интерактивный (реальные значения)

```{r}

#| fig.dim = c(6, 3)

df <- data %>% #distinct(UT, .keep_all = TRUE) %>% 
  select(year, region, top_1, top_10, top_25) %>% 
filter(region != "Unknown") %>% 
  filter(region != "Other") %>% 

  group_by(year, region) %>% mutate(count = length(top_1)) %>% ungroup() %>% 
  group_by(year, region, count) %>% summarise(top_1 = sum(top_1),
                                               top_10 = sum(top_10),
                                               top_25 = sum(top_25)) %>% ungroup() %>% 

  mutate(top_1_perc = round(100 * top_1 / count, 2),
         top_10_perc = round(100 * top_10 / count, 2),
         top_25_perc = round(100 * top_25 / count, 2)) %>% 
  pivot_longer(-c(year,region, count, top_1, top_10, top_25), names_to = "top_x", values_to = "value") 

p1 <- df %>% ggplot(aes(x=year, value, color=top_x)) + 
  geom_line(alpha = 0.5, size = 0.5) +
  geom_point(alpha = 0.5, size = 0.5) +
  # scale_x_continuous(
  #       labels = as.character(seq(min(df$year), max(df$year), by = 1)),
  #       breaks = seq(min(df$year), max(df$year), by = 1),
  #       expand=c(0,0)
  #   ) +
  scale_y_continuous(labels = function(x) paste0(x, "%")) +
  facet_wrap(~region, nrow = 1) +
  labs(title = "Доля статей, входящих топ",
      subtitle = "светалая линия - реальные значения; темная линия - скользящее среднее (шаг = 3 года)") +
  theme_bw() +
  scale_color_brewer(palette = "Dark2", direction = -1) +
  guides(color=guide_legend(override.aes = list(size=5))) + 
  theme(panel.grid = element_blank(),
        panel.grid.major.y = element_line(size=0.1, color = "grey70", linetype = "solid")) +
  theme(strip.background = element_rect(fill = NA),
        strip.text = element_text(colour = 'black',size = 8)) +
  theme(axis.title = element_blank(),
        legend.position = "bottom",
        legend.title= element_blank()) +
  theme(axis.text.x = element_text(size = 7, angle = 45, vjust=0.5),
        axis.text.y = element_text(size = 8)
        )


ggplotly(p1) %>% layout(legend = list(orientation = "h",   
                                      xanchor = "center",  
                                      x = 0.5,
                                      y = -0.25))   
```

:::


```{r}
#| fig.dim = c(6, 3)
df <- data %>% #distinct(UT, .keep_all = TRUE) %>% 
  select(year, region, top_1, top_10, top_25) %>% 
filter(region != "Unknown") %>% 
filter(region != "Other") %>% 
  group_by(year, region) %>% mutate(count = length(top_1)) %>% ungroup() %>% 
  group_by(year, region, count) %>% summarise(top_1 = sum(top_1),
                                               top_10 = sum(top_10),
                                               top_25 = sum(top_25)) %>% ungroup() %>% 

  mutate(top_1_perc = 100 * top_1 / count,
         top_10_perc = 100 * top_10 / count,
         top_25_perc = 100 * top_25 / count) %>% 
  pivot_longer(-c(year,region, count, top_1, top_10, top_25), names_to = "top_x", values_to = "value")

p2 <- df %>% ggplot(aes(x=year, count)) + 
  geom_col(alpha = 0.4) +
  facet_wrap(~region, nrow = 1) +
  labs(title = "Общее число статей") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        panel.grid.major.y = element_line(size=0.1, color = "grey70", linetype = "solid")) +
  theme(strip.background = element_rect(fill = NA),
        strip.text = element_text(colour = 'black',size = 8)) +
  theme(axis.title = element_blank(),
        legend.position = "top",
        legend.title= element_blank()) +
  theme(axis.text.x = element_text(size = 7, angle = 45, vjust=0.5),
        axis.text.y = element_text(size = 8)) 

ggplotly(p2)
```

## 4. Страны: динамика вхожденя в топ 

Таблица с основными странами, разделение на 3 периода и следующие показатели в каждом периоде показать: кол-во публикаций, кол-во статей в топе 1, 10 и 25 (в скобках доли статей в топе).  


::: panel-tabset 

#### 1990-2000

```{r}
data %>% #distinct(UT, .keep_all = TRUE) %>% 
  filter(year_group == "1990-2000") %>% 
  mutate(country = case_when(is.na(country) ~ "Unknown",
                             TRUE ~ country)) %>% 
  group_by(country) %>% mutate(country = case_when(n() < 50 ~ "OTHER (< 50 pubs 1990-2000)",
                                                   TRUE ~ country)) %>% ungroup() %>% 

  group_by(country) %>% summarise(count=length(organisation_full),
                                              top_1 = sum(top_1),
                                              top_10 = sum(top_10),
                                              top_25 = sum(top_25)) %>% ungroup() %>% 

  mutate(top_1_perc = 100 * top_1 / count,
         top_10_perc = 100 * top_10 / count,
         top_25_perc = 100 * top_25 / count) %>% 
  
  ungroup() %>% arrange(desc(count)) %>%
  
  datatable(rownames = FALSE, options = list(pageLength = 10)) %>% 
  formatRound(columns=c(6:8), digits=1)
  
```

#### 2001-2010

```{r}
data %>% #distinct(UT, .keep_all = TRUE) %>% 
  filter(year_group == "2001-2010") %>% 
  mutate(country = case_when(is.na(country) ~ "Unknown",
                             TRUE ~ country)) %>% 
  group_by(country) %>% mutate(country = case_when(n() < 50 ~ "OTHER (< 50 pubs 2001-2010)",
                                                   TRUE ~ country)) %>% ungroup() %>% 

  group_by(country) %>% summarise(count=length(organisation_full),
                                              top_1 = sum(top_1),
                                              top_10 = sum(top_10),
                                              top_25 = sum(top_25)) %>% ungroup() %>% 

  mutate(top_1_perc = 100 * top_1 / count,
         top_10_perc = 100 * top_10 / count,
         top_25_perc = 100 * top_25 / count) %>% 
  
  ungroup() %>% arrange(desc(count)) %>%
  
  datatable(rownames = FALSE, options = list(pageLength = 10)) %>% 
  formatRound(columns=c(6:8), digits=1)
  
```

#### 2011-2020

```{r}
data %>% #distinct(UT, .keep_all = TRUE) %>% 
  filter(year_group == "2011-2020") %>% 
  mutate(country = case_when(is.na(country) ~ "Unknown",
                             TRUE ~ country)) %>% 
  group_by(country) %>% mutate(country = case_when(n() < 50 ~ "OTHER (< 50 pubs 2011-2020)",
                                                   TRUE ~ country)) %>% ungroup() %>% 

  group_by(country) %>% summarise(count=length(organisation_full),
                                              top_1 = sum(top_1),
                                              top_10 = sum(top_10),
                                              top_25 = sum(top_25)) %>% ungroup() %>% 

  mutate(top_1_perc = 100 * top_1 / count,
         top_10_perc = 100 * top_10 / count,
         top_25_perc = 100 * top_25 / count) %>% 
  
  ungroup() %>% arrange(desc(count)) %>%
  
  datatable(rownames = FALSE, options = list(pageLength = 10)) %>% 
  formatRound(columns=c(6:8), digits=1)
  
```

:::

## 5. Группы институций: показатели 5/10/20 лучших

Средние значения показателей по группам институций в динамике: 5,10,20 лучших, все остальные. Показатели MNSC, средняя цитируемость на статью. Линиями на графиках, а группы -- это 5,10,20 лучших.  

**Важно:** 5 лучших в 1990 и 1991 это не обязательно одни и те же
институции. В графиках показаны топы институций в каждый конкретный год.
Фракционализация не производилась. Лучших по какому показателю? Рисунки
построены как лучшие по количеству статей в каждый конкретный год.

::: panel-tabset 

##### Графики

```{r}

## создание переменных топ-универов

df <- data %>% #distinct(UT, .keep_all = TRUE) %>% 
  select(year, organisation_full, top_1, top_10, top_25) %>% 
  filter(!is.na(organisation_full)) %>% 
  group_by(year, organisation_full) %>% summarise(count = length(top_1)) %>% ungroup() %>% 
  arrange(desc(count)) %>% group_by(year) %>%  mutate(top_5_group = case_when(row_number() %in% c(1:5) ~ 1,
                                                                        TRUE ~ 0),
                                                      top_10_group = case_when(row_number() %in% c(1:10) ~ 1,
                                                                        TRUE ~ 0),
                                                      top_20_group = case_when(row_number() %in% c(1:20) ~ 1,
                                                                        TRUE ~ 0),
                                                      other_group = case_when(top_20_group == 0 ~ 1,
                                                                        TRUE ~ 0)) %>% ungroup() %>% 
  select(-count)
                                                                   
df2 <- data %>% filter(!is.na(organisation_full)) %>% 
  left_join(df, by = c("year"="year", "organisation_full"="organisation_full")) %>% 
  select(year, organisation_full, top_5_group, top_10_group, top_20_group, other_group, TC, mncs)

top_5_group <-  df2 %>% filter(top_5_group == 1) %>% 
  group_by(year) %>% summarise(organisation_full = paste(sort(unique(organisation_full)),collapse="; "),
                               group = "top_5_group",
                               mean_mncs = mean(mncs, na.rm = TRUE),
                               mean_TC = mean(TC, na.rm = TRUE)) %>% ungroup()

top_10_group <-  df2 %>% filter(top_10_group == 1) %>% 
  group_by(year) %>% summarise(organisation_full = paste(sort(unique(organisation_full)),collapse="; "),
                               group = "top_10_group",
                               mean_mncs = mean(mncs, na.rm = TRUE),
                               mean_TC = mean(TC, na.rm = TRUE)) %>% ungroup()

top_20_group <-  df2 %>% filter(top_20_group == 1) %>% 
  group_by(year) %>% summarise(organisation_full = "long list",
                               group = "top_20_group",
                               mean_mncs = mean(mncs, na.rm = TRUE),
                               mean_TC = mean(TC, na.rm = TRUE)) %>% ungroup()

other_group <-  df2 %>% filter(other_group == 1) %>% 
  group_by(year) %>% summarise(organisation_full = "long list",
                               group = "other_group",
                               mean_mncs = mean(mncs, na.rm = TRUE),
                               mean_TC = mean(TC, na.rm = TRUE)) %>% ungroup()

df3 <- rbind(top_5_group, top_10_group, top_20_group, other_group)


p1 <- df3 %>% 
  ggplot(aes(year, mean_TC, color = group, group=group)) +
  geom_line() +
    labs(title = "mean_TC") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        panel.grid.major.y = element_line(size=0.1, color = "grey70", linetype = "solid")) +
  theme(strip.background = element_rect(fill = NA),
        strip.text = element_text(colour = 'black',size = 8)) +
  theme(axis.title = element_blank(),
        legend.position = "top",
        legend.title= element_blank()) +
  theme(axis.text.x = element_text(size = 7, angle = 0, vjust=0.5),
        axis.text.y = element_text(size = 8)) 

p2 <- df3 %>% 
  ggplot(aes(year, mean_mncs, color = group, group=group)) +
  geom_line() +
    labs(title = "mean_mncs") +
  theme_bw() +
  theme(panel.grid = element_blank(),
        panel.grid.major.y = element_line(size=0.1, color = "grey70", linetype = "solid")) +
  theme(strip.background = element_rect(fill = NA),
        strip.text = element_text(colour = 'black',size = 8)) +
  theme(axis.title = element_blank(),
        legend.title= element_blank()) +
  theme(axis.text.x = element_text(size = 7, angle = 0, vjust=0.5),
        axis.text.y = element_text(size = 8)) 
  
p1 + p2 + plot_layout(guides = "collect") & 
  theme(legend.position = "bottom")
```

##### Таблица с институциями, включенных в конкретный топ

```{r}
df3 %>% select(year, group, organisation_full) %>% 
  datatable(rownames = FALSE, options = list(pageLength = 10)) 
```

:::

## 6. Доли регионов в самом лучшем аутпуте

Взять только 25% самых цитируемых публикаций в SSCI и в AHCI по отдельности в каждый из годов. График с долями регионов в самом цитируемом аутпуте разными линиями. Фракционализировать по странам. Подумать, как наглядно такое показать для стран?

**Важно**: без фракционализации. Убрана Африка, Океания, Латинская
америка. Что занчит
`25% самых цитируемых публикаций в SSCI и в AHCI по отдельности в каждый из годов`.
Оставить все строки по переменной `top_25 == 1`, а потому уже рисовть по
годам? На рисунке сделан именно этот вариант.

```{r}

p2 <- data %>% filter(region != "Unknown") %>% 
  separate_rows(field, sep=";") %>% 
  filter(top_25 == 1) %>% 
  group_by(field, year, region) %>% count() %>% ungroup() %>% 
  group_by(field, year) %>% mutate(sh = 100* n / sum(n)) %>% 
  ggplot(aes(year, sh, color = region)) +
  geom_line(alpha = 0.5, size = 0.5) +
  geom_point(alpha = 0.5, size = 0.5) +
  geom_ma(ma_fun = SMA, n = 3, linetype = "solid", size = 1.1) +
  # scale_x_continuous(
  #       labels = as.character(seq(min(df$year), max(df$year), by = 1)),
  #       breaks = seq(min(df$year), max(df$year), by = 1),
  #       expand=c(0,0)
  #   ) +
  scale_y_continuous(labels = function(x) paste0(x, "%")) +
  facet_wrap(~field, nrow = 1) +
  labs(title = "Доли",
      subtitle = "светалая линия - реальные значения; темная линия - скользящее среднее (шаг = 3 года)") +
  theme_bw() +
  scale_color_brewer(palette = "Paired") +
  theme(legend.position = "bottom",
        legend.justification ='left') + 
  theme(panel.grid = element_blank(),
        panel.grid.major.y = element_line(size=0.1, color = "grey70", linetype = "solid")) +
  theme(strip.background = element_rect(fill = NA),
        strip.text = element_text(colour = 'black',size = 7)) +
  theme(axis.title = element_blank(),
        legend.title= element_blank()) +
  theme(axis.text.x = element_text(size = 7, angle = 90, vjust=0.5),
        axis.text.y = element_text(size = 8))   

p2
```

## 7. Доли регионов в Q1

Взять только статьи в журналах 1 квартиля в каждый из год (только с 2000 года период). Показать доли регионов по годам разными линиями. Фракционализировать по странам. Подумать, как наглядно такое показать для стран?

**Важно**: без фракционализации. Убрана Африка, Океания, Латинская
америка. Что занчит
`только статьи в журналах 1 квартиля в каждый из годов`. Оставить все
строки с Q1, а потому уже рисовть по годам? На рисунке сделан именно
этот вариант.

```{r}

p2 <- data %>%  filter(region != "Unknown") %>% 
  separate_rows(field, sep=";") %>% 
  filter(Q == "Q1") %>% filter(year >= 2000) %>% 
  group_by(field, year, region) %>% count() %>% ungroup() %>% 
  group_by(field, year) %>% mutate(sh = 100* n / sum(n)) %>% 
  ggplot(aes(year, sh, color = region)) +
  geom_line(alpha = 0.5, size = 0.5) +
  geom_point(alpha = 0.5, size = 0.5) +
  geom_ma(ma_fun = SMA, n = 3, linetype = "solid", size = 1.1) +
  # scale_x_continuous(
  #       labels = as.character(seq(min(df$year), max(df$year), by = 1)),
  #       breaks = seq(min(df$year), max(df$year), by = 1),
  #       expand=c(0,0)
  #   ) +
  scale_y_continuous(labels = function(x) paste0(x, "%")) +
  facet_wrap(~field, nrow = 1) +
  labs(title = "Доли",
      subtitle = "светалая линия - реальные значения; темная линия - скользящее среднее (шаг = 3 года)") +
  theme_bw() +
  scale_color_brewer(palette = "Paired") +
  theme(legend.position = "bottom",
        legend.justification ='left') + 
  theme(panel.grid = element_blank(),
        panel.grid.major.y = element_line(size=0.1, color = "grey70", linetype = "solid")) +
  theme(strip.background = element_rect(fill = NA),
        strip.text = element_text(colour = 'black',size = 7)) +
  theme(axis.title = element_blank(),
        legend.title= element_blank()) +
  theme(axis.text.x = element_text(size = 7, angle = 90, vjust=0.5),
        axis.text.y = element_text(size = 8))   

p2
```
